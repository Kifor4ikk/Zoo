	-- Table for zoo creation
	CREATE TABLE IF NOT EXISTS address(
		ID BIGSERIAL PRIMARY KEY UNIQUE NOT NULL,
		country VARCHAR(255) NOT NULL,
		city VARCHAR(255) NOT NULL,
		street VARCHAR(255) NOT NULL,
		house VARCHAR(255) NOT NULL,
		isDeleted BOOLEAN
	);
	CREATE TABLE IF NOT EXISTS Zoo(
		ID BIGSERIAL PRIMARY KEY UNIQUE NOT NULL,
		name VARCHAR(255) NOT NULL,
		address_Id BIGINT,
		description VARCHAR(255) NOT NULL,
		contactInfo VARCHAR(255) NOT NULL,
		budget DECIMAL,
		CONSTRAINT address_Id_fk FOREIGN KEY (address_Id) REFERENCES address(id) ON DELETE CASCADE ON UPDATE CASCADE,
		isDeleted BOOLEAN
	);
	
	-- Review and connection review with zoo
	CREATE TABLE IF NOT EXISTS Review(
		ID BIGSERIAL PRIMARY KEY UNIQUE NOT NULL,
		name VARCHAR(255) NOT NULL,
		review VARCHAR(255) NOT NULL,
		Date date NOT NULL,
		isDeleted BOOLEAN
	);

	CREATE TABLE IF NOT EXISTS visitorsReview(
		Zoo_Id BIGINT,
		Review_Id BIGINT,
		CONSTRAINT Zoo_Id_fk FOREIGN KEY (Zoo_Id) REFERENCES Zoo(id) ON DELETE CASCADE ON UPDATE CASCADE,
		CONSTRAINT Review_Id_fk FOREIGN KEY (Review_Id) REFERENCES Review(id) ON DELETE CASCADE ON UPDATE CASCADE
	);
	
	-- Finance ̶p̶y̶r̶a̶m̶i̶d 
	CREATE TABLE IF NOT EXISTS Finance(
		ID BIGSERIAL PRIMARY KEY UNIQUE NOT NULL,
		describe VARCHAR(255) NOT NULL,
		cost DECIMAL,
		type VARCHAR,
		isDeleted BOOLEAN
	);
		CREATE TABLE IF NOT EXISTS FinanceInZoo(
		Zoo_Id BIGINT,
		Finance_id BIGINT,
		CONSTRAINT Zoo_Id_fk FOREIGN KEY (Zoo_Id) REFERENCES Zoo(id) ON DELETE CASCADE ON UPDATE CASCADE,
		CONSTRAINT Finance_Id_fk FOREIGN KEY (Finance_Id) REFERENCES Finance(id) ON DELETE CASCADE ON UPDATE CASCADE
	);
	
	-- Params for houses and animals include type of animal and type of house
	CREATE TABLE IF NOT EXISTS climateType(
		ID BIGSERIAL PRIMARY KEY UNIQUE NOT NULL,
		climateType VARCHAR UNIQUE
	);
	CREATE TABLE IF NOT EXISTS animalType(
		ID BIGSERIAL PRIMARY KEY UNIQUE NOT NULL,
		animalType VARCHAR UNIQUE
	);
	CREATE TABLE IF NOT EXISTS foodType(
		ID BIGSERIAL PRIMARY KEY UNIQUE NOT NULL,
		foodType VARCHAR UNIQUE
	);
	CREATE TABLE IF NOT EXISTS zoneType(
		ID BIGSERIAL PRIMARY KEY UNIQUE NOT NULL,
		zoneType VARCHAR UNIQUE
	);
	-- FOOD for animals
	CREATE TABLE IF NOT EXISTS FoodInZoo(
		ID_Zoo BIGINT NOT NULL,
		ID_foodType BIGINT NOT NULL,
		COUNT BIGINT NOT NULL CHECK(COUNT > 0),
		CONSTRAINT ID_foodType_FK FOREIGN KEY (ID_foodType) REFERENCES foodType(id) ON DELETE CASCADE ON UPDATE CASCADE,
		UNIQUE(ID_Zoo,ID_foodType)
	);
	
	-- General animals
	CREATE TABLE IF NOT EXISTS Animal(
		ID BIGSERIAL PRIMARY KEY UNIQUE NOT NULL,
		name VARCHAR(255) NOT NULL,
		describe VARCHAR(2000) NOT NULL,
		age SMALLINT check (AGE >= 0) NOT NULL,
		ID_animalType BIGINT NOT NULL,
		isDeleted BOOLEAN,
		CONSTRAINT animalType_FK FOREIGN KEY (ID_animalType) REFERENCES animalType(Id) ON DELETE CASCADE ON UPDATE CASCADE
	);
	
	CREATE TABLE IF NOT EXISTS climateTypeForTypeOfAnimal(
		ID_TYPEOFANIMAL BIGINT NOT NULL,
		ID_climateType BIGINT NOT NULL,
		CONSTRAINT ID_TYPEOFANIMAL_FK FOREIGN KEY (ID_TYPEOFANIMAL) REFERENCES animalType(ID) ON DELETE CASCADE ON UPDATE CASCADE,
		CONSTRAINT ID_climateType_FK FOREIGN KEY (ID_climateType) REFERENCES climateType(Id) ON DELETE CASCADE ON UPDATE CASCADE,
		UNIQUE(ID_TYPEOFANIMAL, ID_climateType)
	);
	CREATE TABLE IF NOT EXISTS foodTypeForTypeAnimal(
		ID_TYPEOFANIMAL BIGINT,
		ID_foodType BIGINT,
		CONSTRAINT ID_TYPEOFANIMAL_FK FOREIGN KEY (ID_TYPEOFANIMAL) REFERENCES animalType(ID) ON DELETE CASCADE ON UPDATE CASCADE,
		CONSTRAINT ID_foodType_FK FOREIGN KEY (ID_foodType) REFERENCES foodType(Id) ON DELETE CASCADE ON UPDATE CASCADE,
		UNIQUE(ID_TYPEOFANIMAL, ID_foodType)
	);
	CREATE TABLE IF NOT EXISTS zoneTypeForTypeAnimal(
		ID_TYPEOFANIMAL BIGINT,
		ID_zoneType BIGINT,
		CONSTRAINT ID_TYPEOFANIMAL_FK FOREIGN KEY (ID_TYPEOFANIMAL) REFERENCES animalType(ID) ON DELETE CASCADE ON UPDATE CASCADE,
		CONSTRAINT ID_zoneType_FK FOREIGN KEY (ID_zoneType) REFERENCES zoneType(Id) ON DELETE CASCADE ON UPDATE CASCADE,
		UNIQUE(ID_TYPEOFANIMAL, ID_zoneType)
	);
	
	-- Animal houses
	CREATE TABLE IF NOT EXISTS animalHouse(
		ID BIGSERIAL PRIMARY KEY UNIQUE NOT NULL,
		name VARCHAR(255) NOT NULL,
		describe VARCHAR(255) NOT NULL,
		area SMALLINT CHECK (area > 0),
		ID_zoneType BIGINT NOT NULL,
		ID_climateType BIGINT NOT NULL,
		isDeleted BOOLEAN,
		CONSTRAINT ID_zoneType_FK FOREIGN KEY (ID_zoneType) REFERENCES zoneType(Id) ON DELETE CASCADE ON UPDATE CASCADE,
		CONSTRAINT ID_climateType_FK FOREIGN KEY (ID_climateType) REFERENCES climateType(Id) ON DELETE CASCADE ON UPDATE CASCADE
	);
	CREATE TABLE IF NOT EXISTS animalHouseInZoo(
		Zoo_Id BIGINT,
		AnimalHouse_id BIGINT,
		CONSTRAINT Zoo_Id_fk FOREIGN KEY (Zoo_Id) REFERENCES Zoo(id) ON DELETE CASCADE ON UPDATE CASCADE,
		CONSTRAINT AnimalHouse_Id_fk FOREIGN KEY (AnimalHouse_Id) REFERENCES AnimalHouse(id) ON DELETE CASCADE ON UPDATE CASCADE,
		UNIQUE(Zoo_Id, AnimalHouse_Id)
	);
	CREATE TABLE IF NOT EXISTS animalTypeInHouse(
		ID_HOUSE BIGINT,
		ID_ANIMALTYPE BIGINT,
		CONSTRAINT ID_HOUSE_FK FOREIGN KEY (ID_HOUSE) REFERENCES animalHouse(ID) ON DELETE CASCADE ON UPDATE CASCADE,
		CONSTRAINT ID_ANIMALTYPE_FK FOREIGN KEY (ID_ANIMALTYPE) REFERENCES animalType(ID) ON DELETE CASCADE ON UPDATE CASCADE
	);
	CREATE TABLE IF NOT EXISTS AnimalInHouse(
		AnimalHouse_id BIGINT,
		Animal_Id BIGINT,
		CONSTRAINT Animal_Id_fk FOREIGN KEY (Animal_Id) REFERENCES Animal(id) ON DELETE CASCADE ON UPDATE CASCADE,
		CONSTRAINT AnimalHouse_Id_fk FOREIGN KEY (AnimalHouse_Id) REFERENCES AnimalHouse(id) ON DELETE CASCADE ON UPDATE CASCADE,
		UNIQUE (AnimalHouse_Id,Animal_Id),
		UNIQUE (Animal_Id)
	);
	--Current types of animal
		-- Crustacean
	CREATE TABLE IF NOT EXISTS Crustacean(
		ID BIGSERIAL PRIMARY KEY UNIQUE NOT NULL,
		Animal_Id BIGINT,
		seashell VARCHAR,
		CONSTRAINT Animal_Id_fk FOREIGN KEY (Animal_Id) REFERENCES Animal(id) ON DELETE CASCADE ON UPDATE CASCADE,
		UNIQUE (Animal_Id)
	);